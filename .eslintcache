[{"C:\\GitRepos\\general-evaluator\\src\\index.tsx":"1","C:\\GitRepos\\general-evaluator\\src\\reportWebVitals.ts":"2","C:\\GitRepos\\general-evaluator\\src\\App.tsx":"3","C:\\GitRepos\\general-evaluator\\src\\Graph.tsx":"4","C:\\GitRepos\\general-evaluator\\src\\LineChart.tsx":"5","C:\\GitRepos\\general-evaluator\\src\\PivotControl.tsx":"6","C:\\GitRepos\\general-evaluator\\src\\VanillaSearchComponent.tsx":"7","C:\\GitRepos\\general-evaluator\\src\\SingleSearchResult.tsx":"8","C:\\GitRepos\\general-evaluator\\src\\FeedbackNotes.tsx":"9","C:\\GitRepos\\general-evaluator\\src\\FeedbackNote.tsx":"10","C:\\GitRepos\\general-evaluator\\src\\constants.ts":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":5504,"mtime":1611518688843,"results":"15","hashOfConfig":"13"},{"size":335,"mtime":1610898132913,"results":"16","hashOfConfig":"13"},{"size":1021,"mtime":1611393472573,"results":"17","hashOfConfig":"13"},{"size":10333,"mtime":1611520397538,"results":"18","hashOfConfig":"13"},{"size":2034,"mtime":1611518695451,"results":"19","hashOfConfig":"13"},{"size":692,"mtime":1611518953986,"results":"20","hashOfConfig":"13"},{"size":1109,"mtime":1611501667600,"results":"21","hashOfConfig":"13"},{"size":457,"mtime":1611452366899,"results":"22","hashOfConfig":"13"},{"size":8746,"mtime":1611517386456,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"36gyxp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\GitRepos\\general-evaluator\\src\\index.tsx",[],["51","52"],"C:\\GitRepos\\general-evaluator\\src\\reportWebVitals.ts",[],"C:\\GitRepos\\general-evaluator\\src\\App.tsx",["53","54","55","56"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TextField, ITextFieldStyles, Label, DefaultButton} from '@fluentui/react';\n// import OptionsCallout from './OptionsCallout';\nimport Graph from './Graph';\nimport PivotControl from './PivotControl';\n// import SearchResults from './SearchResults'\nimport VanillaSearchComponent from './VanillaSearchComponent';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\n\ninterface IAppState {\n  showUsers: boolean;\n  targetElement: any;\n  isGraphVisible: boolean;\n  textFieldValue: string | undefined;\n  keyCount: number;\n}\n\nconst users = ['Aaron Nakamura-Weiser', 'Aftab Hassan', 'Alex Hoff', 'Ann Ly', \n'Bella Li', 'Betty Siewert', 'Christopher Rahla', 'Eldon L. Vincent', 'Gavin Britto', 'Grant Hsu', \n'Hannah Jang', 'Ime Ntekpere', 'Jie (Laurie) Zhang', 'Kang Kai Chow', 'Keisuke Inomura', 'KiBeom Kwon', \n'Kimmie Feng', 'Maciej Fronczuk', 'Margaret Tarnawa', 'Marty Varela', 'Matt Green', 'Mauricio Laine', 'Michael Umeano', \n'Narendra kumar Sampath kumar', 'Natraj Jaganmohan', 'Neeraja Abhyankar', 'Sachin Nayak', 'Sam Byrne', 'Tao Guo', \n'Tessara Smith', 'Viswas Vanama', 'Wing Huang'];\n\nclass App extends React.Component<{}, IAppState> {\n\n  private matches: string[] = [];\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      showUsers: false,\n      targetElement: undefined,\n      isGraphVisible: true,\n      textFieldValue: '',\n      keyCount: 0\n    }\n  }\n\n  private textFieldStyles: Partial<ITextFieldStyles> = {\n    root: {\n      width: '500px',\n    }, \n    fieldGroup: {\n      backgroundColor: 'aqua',\n    }\n  }\n\n  public componentDidMount() {\n    const textField = document.getElementById('searchTextField');\n    if(textField) {\n      textField.focus();\n    }\n  }\n\n  public componentDidUpdate() {\n    const textField = document.getElementById('searchTextField');\n    if(textField) {\n      textField.focus();\n    }\n  }\n\n  public render() {\n    return (\n        <>\n          <div className=\"App\">\n            <div className=\"cosmosLogo\"><Label styles={{\"root\":{color:\"white\", fontSize: \"30px\"}}}>Cosmos</Label></div>  \n            <div className=\"generalEvaluatorLogo\"><Label styles={{\"root\":{color:\"white\", fontSize: \"20px\"}}}>General Evaluator</Label></div>  \n            <TextField autoComplete={'off'} id={'searchTextField'} onChange={this.onChangeHandler} onKeyDown={this.onKeyDownHandler} /* styles={{\"root\":{height: 18}}} */ className=\"textFieldStyles\" />\n            {/* <SearchBox className=\"textFieldStyles\" placeholder=\"Search\" onSearch={newValue => console.log('value is ' + newValue)} /> */}\n            {/* <DefaultButton styles={{\"root\":{backgroundColor: '#034694'}}}>?</DefaultButton> */}\n            <div></div>\n          </div>\n\n          {!this.state.isGraphVisible ? <div /* className=\"vanllasearchcomponent\" */>\n            <VanillaSearchComponent onClickHandler={this.onClickHandlerOfSearchComponent} keyCount={this.state.keyCount} prefix={this.state.textFieldValue}/>\n          </div>: undefined}\n          \n          {this.state.textFieldValue?.length!==0 ? (<div style={{position: \"absolute\", top: 80, left: 100}}>\n            <Label styles={{\"root\":{top:\"50px\", fontSize: \"20px\", fontWeight: \"300\"}}}>Showing feedback for {this.matches[this.state.keyCount]}</Label>\n          </div>):(<div style={{position: \"absolute\", top: 80, left: 100}}>\n            <Label styles={{\"root\":{top:\"50px\", fontSize: \"20px\", fontWeight: \"300\"}}}>Showing feedback for all speeches at Cosmos starting May 2020</Label>\n          </div>)}\n          \n          {this.state.isGraphVisible ? (<div className=\"pivotContainer\">\n            <PivotControl keyCount={this.state.keyCount} user={this.matches[this.state.keyCount]}/>\n          </div>):(<div className=\"pivotContainerWithOpacity\">\n            <PivotControl keyCount={this.state.keyCount} user={this.matches[this.state.keyCount]}/>\n          </div>)}\n        </>\n        );\n  }\n\n  private onClickHandlerOfSearchComponent = (ev: any, keyCountToSet: number) => {\n    this.setState({\n      showUsers: true,\n      targetElement: ev.target,\n      isGraphVisible: true,\n      keyCount: keyCountToSet\n      // textFieldValue: ''\n    })\n  }\n\n  private onChangeHandler = (ev: any, newValue: string | undefined) => {\n    this.setState({\n      textFieldValue: newValue,\n      targetElement: ev.target,\n      keyCount: 0,\n      isGraphVisible: newValue?.length===0?true:false\n    })\n\n    if(newValue) {\n      this.matches = [];\n\n      for(let i=0;i<users.length;i++) {\n        const user = users[i].toLowerCase();\n        if(user.indexOf(newValue) >= 0) {\n            this.matches.push(users[i]);\n        }\n      } \n    }\n  }\n\n  private onKeyDownHandler = (ev: React.KeyboardEvent) => {\n    if(ev.key === 'Enter') {\n      this.setState({\n        showUsers: true,\n        targetElement: ev.target,\n        isGraphVisible: true,\n        // textFieldValue: ''\n      })\n    } else if(ev.key === 'ArrowUp') {\n      const currentKeyCount = this.state.keyCount;\n      this.setState({\n        keyCount: currentKeyCount-1 >= 0 ? currentKeyCount-1 : 0\n      }, ()=>{\n        // console.log(this.state.keyCount)\n      })\n    } else if(ev.key === 'ArrowDown') {\n      const currentKeyCount = this.state.keyCount;\n      this.setState({\n        keyCount: currentKeyCount + 1 <= this.matches.length-1 ? currentKeyCount + 1 : this.matches.length-1\n      }, () => {\n        // console.log(this.state.keyCount)\n      })\n    }\n  }\n}\n\nexport default App;\n","C:\\GitRepos\\general-evaluator\\src\\Graph.tsx",["57"],"C:\\GitRepos\\general-evaluator\\src\\LineChart.tsx",[],"C:\\GitRepos\\general-evaluator\\src\\PivotControl.tsx",["58","59","60"],"C:\\GitRepos\\general-evaluator\\src\\VanillaSearchComponent.tsx",["61","62","63"],"import * as React from 'react';\r\nimport {TextField} from '@fluentui/react/lib/TextField'\r\nimport {Callout, DirectionalHint} from '@fluentui/react/lib/Callout';\r\nimport SingleSearchResult from './SingleSearchResult';\r\n\r\ninterface IVanillaSearchComponentProps {\r\n    prefix: string | undefined;\r\n    keyCount: number;\r\n    onClickHandler: (ev: any, keyCountToSet: number)=>void\r\n}\r\n\r\nconst users = ['Aaron Nakamura-Weiser', 'Aftab Hassan', 'Alex Hoff', 'Ann Ly', \r\n'Bella Li', 'Betty Siewert', 'Christopher Rahla', 'Eldon L. Vincent', 'Gavin Britto', 'Grant Hsu', \r\n'Hannah Jang', 'Ime Ntekpere', 'Jie (Laurie) Zhang', 'Kang Kai Chow', 'Keisuke Inomura', 'KiBeom Kwon', \r\n'Kimmie Feng', 'Maciej Fronczuk', 'Margaret Tarnawa', 'Marty Varela', 'Matt Green', 'Mauricio Laine', 'Michael Umeano', \r\n'Narendra kumar Sampath kumar', 'Natraj Jaganmohan', 'Neeraja Abhyankar', 'Sachin Nayak', 'Sam Byrne', 'Tao Guo', \r\n'Tessara Smith', 'Viswas Vanama', 'Wing Huang'];\r\n\r\nclass VanillaSearchComponent extends React.Component<IVanillaSearchComponentProps, {}> {\r\n    public render() {\r\n        const {prefix} = this.props;\r\n        let matches = [];\r\n        if(prefix) {\r\n            for(let i=0;i<users.length;i++) {\r\n                const user = users[i].toLowerCase();\r\n                if(user.indexOf(prefix) >= 0) {\r\n                    matches.push(users[i]);\r\n                }\r\n            } \r\n        }\r\n\r\n        return (\r\n            <div style={{width: 298, /* height: 100, */ /* backgroundColor: 'aqua', */ position: 'absolute', left: 600, top: 55, borderRadius: 2, boxShadow: 'rgba(0, 0, 0, 0.133) 0px 6.4px 14.4px 0px, rgba(0, 0, 0, 0.11) 0px 1.2px 3.6px 0px'}}>\r\n                {matches.map((value, index) => {\r\n                    return <SingleSearchResult onClickHandler={this.props.onClickHandler} keyCount={index} styleClass={index===this.props.keyCount ? 'fakeFocusResultWithHover': 'fakeFocusResult'} name={value}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VanillaSearchComponent\r\n\r\n","C:\\GitRepos\\general-evaluator\\src\\SingleSearchResult.tsx",[],"C:\\GitRepos\\general-evaluator\\src\\FeedbackNotes.tsx",["64"],"import * as React from 'react';\r\nimport FeedbackNote from './FeedbackNote'\r\nimport './App.css';\r\nimport { Label } from '@fluentui/react';\r\n\r\ninterface IFeedbackNoteProps {\r\n    comments: string[][];\r\n}\r\n\r\nclass FeedbackNotes extends React.Component<IFeedbackNoteProps, {}> {\r\n    public render() {\r\n        const commensForAllSpeeches = this.props.comments;\r\n\r\n        return (\r\n            <div className=\"\">\r\n                {commensForAllSpeeches.map((value, index)=>{\r\n                        const allCommentsForThisSpeech = value;\r\n                    return <div className=\"feedbackNotesAndLabelOuterDiv\">\r\n                        <Label>Comments for speech {index + 1}</Label>\r\n                        \r\n                        <div className=\"feedbackNotesContainer\">\r\n                        {commensForAllSpeeches[index].map( (speechComment, indexOfComment)=> {\r\n                            return <FeedbackNote comment={speechComment}/>\r\n                        })}</div>\r\n\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FeedbackNotes;","C:\\GitRepos\\general-evaluator\\src\\FeedbackNote.tsx",[],["65","66"],"C:\\GitRepos\\general-evaluator\\src\\constants.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":4,"column":45,"nodeType":"73","messageId":"74","endLine":4,"endColumn":58},{"ruleId":"71","severity":1,"message":"76","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":13},{"ruleId":"71","severity":1,"message":"77","line":10,"column":10,"nodeType":"73","messageId":"74","endLine":10,"endColumn":19},{"ruleId":"71","severity":1,"message":"78","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":17},{"ruleId":"71","severity":1,"message":"79","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"76","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":13},{"ruleId":"71","severity":1,"message":"80","line":19,"column":7,"nodeType":"73","messageId":"74","endLine":19,"endColumn":52},{"ruleId":"71","severity":1,"message":"81","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"82","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"83","line":3,"column":18,"nodeType":"73","messageId":"74","endLine":3,"endColumn":33},{"ruleId":"71","severity":1,"message":"84","line":17,"column":31,"nodeType":"73","messageId":"74","endLine":17,"endColumn":55},{"ruleId":"67","replacedBy":"85"},{"ruleId":"69","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DefaultButton' is defined but never used.","'Graph' is defined but never used.","'SearchBox' is defined but never used.","'LineChart' is defined but never used.","'Label' is defined but never used.","'labelStyles' is assigned a value but never used.","'TextField' is defined but never used.","'Callout' is defined but never used.","'DirectionalHint' is defined but never used.","'allCommentsForThisSpeech' is assigned a value but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation"]